// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
    // Mux(a=a[0], b=b[0], sel=sel[0], out=outAB[0]);
    // And(a=notSel, b=outAB[0], out=outSel1[0]);
    // Mux(a=c[0], b=d[0], sel=sel[0], out=outCD[0]);
    // And(a=sel, b=outCD[0], out=outSel2[0]);
    // Or(a=outSel1[0], b=outSel2[0], out=out[0]);

    Not(in=sel[1], out=notSel);

    Mux(a=a[0], b=b[0], sel=sel[0], out=outAB0);
    And(a=notSel, b=outAB0, out=outSel10);
    Mux(a=c[0], b=d[0], sel=sel[0], out=outCD0);
    And(a=sel[1], b=outCD0, out=outSel20);
    Or(a=outSel10, b=outSel20, out=out[0]);

    Mux(a=a[1], b=b[1], sel=sel[0], out=outAB1);
    And(a=notSel, b=outAB1, out=outSel11);
    Mux(a=c[1], b=d[1], sel=sel[0], out=outCD1);
    And(a=sel[1], b=outCD1, out=outSel21);
    Or(a=outSel11, b=outSel21, out=out[1]);
    Mux(a=a[2], b=b[2], sel=sel[0], out=outAB2);
    And(a=notSel, b=outAB2, out=outSel12);
    Mux(a=c[2], b=d[2], sel=sel[0], out=outCD2);
    And(a=sel[1], b=outCD2, out=outSel22);
    Or(a=outSel12, b=outSel22, out=out[2]);
    Mux(a=a[3], b=b[3], sel=sel[0], out=outAB3);
    And(a=notSel, b=outAB3, out=outSel13);
    Mux(a=c[3], b=d[3], sel=sel[0], out=outCD3);
    And(a=sel[1], b=outCD3, out=outSel23);
    Or(a=outSel13, b=outSel23, out=out[3]);
    Mux(a=a[4], b=b[4], sel=sel[0], out=outAB4);
    And(a=notSel, b=outAB4, out=outSel14);
    Mux(a=c[4], b=d[4], sel=sel[0], out=outCD4);
    And(a=sel[1], b=outCD4, out=outSel24);
    Or(a=outSel14, b=outSel24, out=out[4]);
    Mux(a=a[5], b=b[5], sel=sel[0], out=outAB5);
    And(a=notSel, b=outAB5, out=outSel15);
    Mux(a=c[5], b=d[5], sel=sel[0], out=outCD5);
    And(a=sel[1], b=outCD5, out=outSel25);
    Or(a=outSel15, b=outSel25, out=out[5]);
    Mux(a=a[6], b=b[6], sel=sel[0], out=outAB6);
    And(a=notSel, b=outAB6, out=outSel16);
    Mux(a=c[6], b=d[6], sel=sel[0], out=outCD6);
    And(a=sel[1], b=outCD6, out=outSel26);
    Or(a=outSel16, b=outSel26, out=out[6]);
    Mux(a=a[7], b=b[7], sel=sel[0], out=outAB7);
    And(a=notSel, b=outAB7, out=outSel17);
    Mux(a=c[7], b=d[7], sel=sel[0], out=outCD7);
    And(a=sel[1], b=outCD7, out=outSel27);
    Or(a=outSel17, b=outSel27, out=out[7]);
    Mux(a=a[8], b=b[8], sel=sel[0], out=outAB8);
    And(a=notSel, b=outAB8, out=outSel18);
    Mux(a=c[8], b=d[8], sel=sel[0], out=outCD8);
    And(a=sel[1], b=outCD8, out=outSel28);
    Or(a=outSel18, b=outSel28, out=out[8]);
    Mux(a=a[9], b=b[9], sel=sel[0], out=outAB9);
    And(a=notSel, b=outAB9, out=outSel19);
    Mux(a=c[9], b=d[9], sel=sel[0], out=outCD9);
    And(a=sel[1], b=outCD9, out=outSel29);
    Or(a=outSel19, b=outSel29, out=out[9]);
    Mux(a=a[10], b=b[10], sel=sel[0], out=outAB10);
    And(a=notSel, b=outAB10, out=outSel110);
    Mux(a=c[10], b=d[10], sel=sel[0], out=outCD10);
    And(a=sel[1], b=outCD10, out=outSel210);
    Or(a=outSel110, b=outSel210, out=out[10]);
    Mux(a=a[11], b=b[11], sel=sel[0], out=outAB11);
    And(a=notSel, b=outAB11, out=outSel111);
    Mux(a=c[11], b=d[11], sel=sel[0], out=outCD11);
    And(a=sel[1], b=outCD11, out=outSel211);
    Or(a=outSel111, b=outSel211, out=out[11]);
    Mux(a=a[12], b=b[12], sel=sel[0], out=outAB12);
    And(a=notSel, b=outAB12, out=outSel112);
    Mux(a=c[12], b=d[12], sel=sel[0], out=outCD12);
    And(a=sel[1], b=outCD12, out=outSel212);
    Or(a=outSel112, b=outSel212, out=out[12]);
    Mux(a=a[13], b=b[13], sel=sel[0], out=outAB13);
    And(a=notSel, b=outAB13, out=outSel113);
    Mux(a=c[13], b=d[13], sel=sel[0], out=outCD13);
    And(a=sel[1], b=outCD13, out=outSel213);
    Or(a=outSel113, b=outSel213, out=out[13]);
    Mux(a=a[14], b=b[14], sel=sel[0], out=outAB14);
    And(a=notSel, b=outAB14, out=outSel114);
    Mux(a=c[14], b=d[14], sel=sel[0], out=outCD14);
    And(a=sel[1], b=outCD14, out=outSel214);
    Or(a=outSel114, b=outSel214, out=out[14]);
    Mux(a=a[15], b=b[15], sel=sel[0], out=outAB15);
    And(a=notSel, b=outAB15, out=outSel115);
    Mux(a=c[15], b=d[15], sel=sel[0], out=outCD15);
    And(a=sel[1], b=outCD15, out=outSel215);
    Or(a=outSel115, b=outSel215, out=out[15]);

}